from telegram import Update
from telegram.ext import ContextTypes
from briefgen import generate_brief
from config import MAKE_WEBHOOK_URL
import requests

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üß† *BriefBot v1.0 –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.*\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞.\n\n"
        "üì® _–ü–µ—Ä–µ—à–ª–∏—Ç–µ –º–Ω–µ —Ç–µ–∫—Å—Ç –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –∑–∞—è–≤–∫–∏ ‚Äî –∏ —è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É—é –µ—ë –≤ –ª–æ–≥–∏—á–µ—Å–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ._",
        parse_mode="Markdown"
    )

async def handle_brief(update: Update, context: ContextTypes.DEFAULT_TYPE):
    raw_text = update.message.text

    await update.message.reply_text("üß© –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤—Ö–æ–¥–Ω–æ–π —Ç–µ–∫—Å—Ç...\nüì° –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —è–∑—ã–∫–æ–≤–æ–π –º–æ–¥–µ–ª–∏...")

    try:
        structured = generate_brief(raw_text)
    except Exception as e:
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¢–ó. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É.")
        print("–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:", e)
        return

    await update.message.reply_text("‚úÖ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–æ:\n\n" + structured)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Make
    try:
        response = requests.post(MAKE_WEBHOOK_URL, json={
            "source_text": raw_text,
            "structured_brief": structured,
            "username": update.effective_user.username or "unknown"
        })

        if response.status_code == 200:
            await update.message.reply_text("‚òÅÔ∏è –ó–∞–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –æ–±–ª–∞—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ.")
        else:
            await update.message.reply_text("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¢–ó. –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞: " + str(response.status_code))

    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Make:", e)
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –æ–±–ª–∞—á–Ω—É—é —Å–∏—Å—Ç–µ–º—É.")
